{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactProj\\\\my-app\\\\src\\\\adminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './cssFiles/adminpanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [newSong, setNewSong] = useState({\n    title: '',\n    videoId: ''\n  });\n  const [editingSong, setEditingSong] = useState(null);\n  useEffect(() => {\n    fetchSongs();\n  }, []);\n  const fetchSongs = async () => {\n    const res = await axios.get('http://localhost:5000/api/songs');\n    setSongs(res.data);\n  };\n  const handleChange = e => {\n    setNewSong({\n      ...newSong,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddSong = async e => {\n    e.preventDefault();\n    if (!newSong.title || !newSong.videoId) return alert(\"Both fields required.\");\n    await axios.post('http://localhost:5000/api/songs', newSong);\n    setNewSong({\n      title: '',\n      videoId: ''\n    });\n    fetchSongs();\n  };\n  const handleDelete = async id => {\n    await axios.delete(`http://localhost:5000/api/songs/${id}`);\n    fetchSongs();\n  };\n  const handleEdit = song => {\n    setEditingSong(song);\n    setNewSong({\n      title: song.title,\n      videoId: song.videoId\n    });\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    await axios.put(`http://localhost:5000/api/songs/${editingSong._id}`, newSong);\n    setEditingSong(null);\n    setNewSong({\n      title: '',\n      videoId: ''\n    });\n    fetchSongs();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel - Manage Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingSong ? handleUpdate : handleAddSong,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Song Title\",\n        value: newSong.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"videoId\",\n        placeholder: \"YouTube Video ID\",\n        value: newSong.videoId,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingSong ? 'Update Song' : 'Add Song'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), editingSong && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          setEditingSong(null);\n          setNewSong({\n            title: '',\n            videoId: ''\n          });\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"song-list\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: song.videoId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(song),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(song._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, song._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"qWKGAyOlhmlUyDv6rAOh/rI4Sko=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPanel","_s","songs","setSongs","newSong","setNewSong","title","videoId","editingSong","setEditingSong","fetchSongs","res","get","data","handleChange","e","target","name","value","handleAddSong","preventDefault","alert","post","handleDelete","id","delete","handleEdit","song","handleUpdate","put","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["C:/reactProj/my-app/src/adminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './cssFiles/adminpanel.css';\r\n\r\nconst AdminPanel = () => {\r\n  const [songs, setSongs] = useState([]);\r\n  const [newSong, setNewSong] = useState({ title: '', videoId: '' });\r\n  const [editingSong, setEditingSong] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  const fetchSongs = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/songs');\r\n    setSongs(res.data);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewSong({ ...newSong, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddSong = async (e) => {\r\n    e.preventDefault();\r\n    if (!newSong.title || !newSong.videoId) return alert(\"Both fields required.\");\r\n    await axios.post('http://localhost:5000/api/songs', newSong);\r\n    setNewSong({ title: '', videoId: '' });\r\n    fetchSongs();\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await axios.delete(`http://localhost:5000/api/songs/${id}`);\r\n    fetchSongs();\r\n  };\r\n\r\n  const handleEdit = (song) => {\r\n    setEditingSong(song);\r\n    setNewSong({ title: song.title, videoId: song.videoId });\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    await axios.put(`http://localhost:5000/api/songs/${editingSong._id}`, newSong);\r\n    setEditingSong(null);\r\n    setNewSong({ title: '', videoId: '' });\r\n    fetchSongs();\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-panel\">\r\n      <h2>Admin Panel - Manage Songs</h2>\r\n\r\n      <form onSubmit={editingSong ? handleUpdate : handleAddSong}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Song Title\"\r\n          value={newSong.title}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"videoId\"\r\n          placeholder=\"YouTube Video ID\"\r\n          value={newSong.videoId}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">{editingSong ? 'Update Song' : 'Add Song'}</button>\r\n        {editingSong && (\r\n          <button type=\"button\" onClick={() => {\r\n            setEditingSong(null);\r\n            setNewSong({ title: '', videoId: '' });\r\n          }}>\r\n            Cancel\r\n          </button>\r\n        )}\r\n      </form>\r\n\r\n      <ul className=\"song-list\">\r\n        {songs.map((song) => (\r\n          <li key={song._id}>\r\n            <span>{song.title}</span> - <span>{song.videoId}</span>\r\n            <button onClick={() => handleEdit(song)}>Edit</button>\r\n            <button onClick={() => handleDelete(song._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}